#include "stm32f4xx_hal.h"

// GPIO pin definitions for LED and button
#define LED_PIN     GPIO_PIN_5
#define LED_PORT    GPIOA
#define BUTTON_PIN  GPIO_PIN_13
#define BUTTON_PORT GPIOC

// Function prototypes
void SystemClock_Config(void);
void GPIO_Init(void);

int main(void) {
  // Initialize HAL library and system clock
  HAL_Init();
  SystemClock_Config();

  // Initialize GPIO
  GPIO_Init();

  while (1) {
    // Check if the button is pressed
    if (HAL_GPIO_ReadPin(BUTTON_PORT, BUTTON_PIN) == GPIO_PIN_RESET) {
      // Toggle the LED
      HAL_GPIO_TogglePin(LED_PORT, LED_PIN);

      // Delay for a short period to see the LED blink
      HAL_Delay(100);
    }
  }
}

void SystemClock_Config(void) {
  // System Clock Configuration code remains unchanged
}

void GPIO_Init(void) {
  // Enable GPIO clocks
  __HAL_RCC_GPIOA_CLK_ENABLE();
  __HAL_RCC_GPIOC_CLK_ENABLE();

  // Configure LED pin as output
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  GPIO_InitStruct.Pin = LED_PIN;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(LED_PORT, &GPIO_InitStruct);

  // Configure button pin as input
  GPIO_InitStruct.Pin = BUTTON_PIN;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_PULLUP;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(BUTTON_PORT, &GPIO_InitStruct);
}
